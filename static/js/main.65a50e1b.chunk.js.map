{"version":3,"sources":["logo.svg","Forms/FormSamples.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FormDatePickerAlert","state","date","handleChange","message","info","concat","format","_this","setState","this","react_default","a","createElement","href","target","rel","className","date_picker","onChange","es_alert","type","Component","FormPrimeVal","number","value","validatePrimeNumber","validateStatus","errorMsg","handleNumberChange","_this2","Object","objectSpread","es_form","Item","assign","labelCol","span","wrapperCol","label","help","input_number","min","max","FormValSamples","Option","Select","xs","sm","input","placeholder","id","hasFeedback","style","width","time_picker","es_select","defaultValue","cascader","options","marginBottom","display","textAlign","App","btsrpLnk","document","setAttribute","head","appendChild","src","logo","alt","title","FormSamples_FormValSamples","FormSamples_FormDatePickerAlert","FormSamples_FormPrimeVal","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65a50e1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport {\n  Alert,\n  Cascader,\n  DatePicker,\n  Form,\n  Input,\n  InputNumber,\n  message,\n  TimePicker,\n  Select,\n} from 'antd';\n\nclass FormDatePickerAlert extends Component {\n\n  state = {\n    date: null,\n  };\n\n  handleChange = date => {\n    message.info(`Selected Date: ${date ? date.format(\"YYYY-MM-DD\") : \"None\"}`);\n    this.setState({ date });\n  };\n\n\n  render() {\n    const { date } = this.state;\n    return (\n      <div>\n        <p>Adapted from&nbsp;\n          <a href=\"https://ant.design/docs/react/getting-started\" target=\"_blank\" rel=\"noopener noreferrer\"><code>antd</code> Getting Started docs</a>\n        </p>\n        <div className=\"datepicker__wrapper\">\n          <DatePicker onChange={this.handleChange} />\n          <div className=\"datepicker__msg\">\n            <Alert\n              message={`Selected Date: ${date ? date.format('YYYY-MM-DD') : 'None'}`}\n              type=\"success\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass FormPrimeVal extends Component {\n  state = {\n    number: {\n      value: 11,\n    },\n  };\n\n  validatePrimeNumber = (number) => {\n    if (number === 11) {\n      return {\n        validateStatus: 'success',\n        errorMsg: null,\n      };\n    }\n    return {\n      validateStatus: 'error',\n      errorMsg: 'The prime between 8 and 12 is 11!',\n    };\n  }\n\n  handleNumberChange = (value) => {\n    this.setState({\n      number: {\n        ...this.validatePrimeNumber(value),\n        value,\n      },\n    });\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: { span: 7 },\n      wrapperCol: { span: 12 },\n    };\n    const number = this.state.number;\n    const tips = 'A prime is a natural number greater than 1 that has no positive divisors other than 1 and itself.';\n    return (\n      <div>\n        <p>Adapted from&nbsp;\n          <a href=\"https://ant.design/components/form/#components-form-demo-without-form-create\" target=\"_blank\" rel=\"noopener noreferrer\"><code>antd</code> Primes example docs</a>\n        </p>\n        <Form>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Prime between 8 & 12\"\n            validateStatus={number.validateStatus}\n            help={number.errorMsg || tips}\n          >\n            <InputNumber\n              min={8}\n              max={12}\n              value={number.value}\n              onChange={this.handleNumberChange}\n            />\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nclass FormValSamples extends Component {\n\n  render() {\n    const { Option } = Select;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 },\n      },\n    };\n\n    return (\n      <Form {...formItemLayout}>\n        <div className=\"row\">\n          <div className=\"col\">\n            <p>Adapted from&nbsp;\n              <a href=\"https://ant.design/components/form/#components-form-demo-validate-static\" target=\"_blank\" rel=\"noopener noreferrer\"><code>antd</code> Validation options docs</a>\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Form.Item\n              label=\"Fail\"\n              validateStatus=\"error\"\n              help=\"Should be combination of numbers & alphabets\"\n            >\n              <Input placeholder=\"unavailable choice\" id=\"error\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Warning\"\n              validateStatus=\"warning\"\n            >\n              <Input placeholder=\"Warning\" id=\"warning\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Validating\"\n              hasFeedback\n              validateStatus=\"validating\"\n              help=\"The information is being validated...\"\n            >\n              <Input placeholder=\"Validating\" id=\"validating\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Success\"\n              hasFeedback\n              validateStatus=\"success\"\n            >\n              <Input placeholder=\"I'm the content\" id=\"success\" />\n            </Form.Item>\n\n          </div>\n          <div className=\"col\">\n            <Form.Item\n              label=\"Warning\"\n              hasFeedback\n              validateStatus=\"warning\"\n            >\n              <Input placeholder=\"Warning\" id=\"warning2\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Fail\"\n              hasFeedback\n              validateStatus=\"error\"\n              help=\"Should be combination of numbers & alphabets\"\n            >\n              <Input placeholder=\"unavailable choice\" id=\"error2\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Success\"\n              hasFeedback\n              validateStatus=\"success\"\n            >\n              <DatePicker style={{ width: '100%' }} />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Warning\"\n              hasFeedback\n              validateStatus=\"warning\"\n            >\n              <TimePicker style={{ width: '100%' }} />\n            </Form.Item>\n\n          </div>\n          <div className=\"col\">\n            <Form.Item\n              label=\"Error\"\n              hasFeedback\n              validateStatus=\"error\"\n            >\n              <Select defaultValue=\"1\">\n                <Option value=\"1\">Option 1</Option>\n                <Option value=\"2\">Option 2</Option>\n                <Option value=\"3\">Option 3</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              label=\"Validating\"\n              hasFeedback\n              validateStatus=\"validating\"\n              help=\"The information is being validated...\"\n            >\n              <Cascader defaultValue={['1']} options={[]} />\n            </Form.Item>\n\n            <Form.Item\n              label=\"inline\"\n              style={{ marginBottom: 0 }}\n            >\n              <Form.Item\n                validateStatus=\"error\"\n                help=\"Please select the correct date\"\n                style={{ display: 'inline-block', width: 'calc(50% - 12px)' }}\n              >\n                <DatePicker />\n              </Form.Item>\n              <span style={{ display: 'inline-block', width: '24px', textAlign: 'center' }}>\n                -\n              </span>\n              <Form.Item\n                style={{ display: 'inline-block', width: 'calc(50% - 12px)' }}\n              >\n                <DatePicker />\n              </Form.Item>\n            </Form.Item>\n\n            <Form.Item\n              label=\"Success\"\n              hasFeedback\n              validateStatus=\"success\"\n            >\n              <InputNumber style={{ width: '100%' }} />\n            </Form.Item>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport {\n  FormDatePickerAlert,\n  FormPrimeVal,\n  FormValSamples\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { FormDatePickerAlert, FormPrimeVal , FormValSamples } from './Forms/FormSamples';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    const btsrpLnk = document.createElement(\"link\");\n    btsrpLnk.setAttribute('rel', 'stylesheet');\n    btsrpLnk.setAttribute('href', 'https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css');\n    btsrpLnk.setAttribute('integrity', 'sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T');\n    btsrpLnk.setAttribute('crossorigin', 'anonymous');\n    document.head.appendChild(btsrpLnk);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"header\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <span>\n            An&nbsp;\n            <a className=\"link\" title=\"React's antd\" href=\"https://ant.design/docs/react/introduce\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Ant Design\n            </a> example created through&nbsp;\n            <a className=\"link\" title=\"single-page app generator\" href=\"https://github.com/facebookincubator/create-react-app\"  target=\"_blank\" rel=\"noopener noreferrer\">\n              <code>create-react-app</code>\n            </a>\n          </span>\n        </header>\n        <main className=\"container\">\n          <h2>Forms</h2>\n          <section className=\"form\">\n            <h3>Validation Samples</h3>\n            <FormValSamples />\n            <hr />\n            <div className=\"row\">\n              <div className=\"col\">\n                <h3>DatePicker Alert</h3>\n                <FormDatePickerAlert />\n              </div>\n              <div className=\"col\">\n                <h3>Prime Validation</h3>\n                <FormPrimeVal />\n              </div>\n            </div>\n          </section>\n        </main>\n        <footer>\n          <a\n            className=\"link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}